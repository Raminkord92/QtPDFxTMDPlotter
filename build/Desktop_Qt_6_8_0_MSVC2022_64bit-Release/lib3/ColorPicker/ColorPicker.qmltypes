import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "colorhistorymodel.h"
        name: "ColorHistoryModel"
        accessSemantics: "reference"
        prototype: "QAbstractListModel"
        exports: ["ColorPicker/ColorHistoryModel 1.0"]
        exportMetaObjectRevisions: [256]
        Property { name: "historySize"; type: "int"; notify: "historySizeChanged"; index: 0; isFinal: true }
        Signal { name: "historySizeChanged" }
        Method {
            name: "append"
            Parameter { name: "newColor"; type: "QColor" }
        }
        Method { name: "clear" }
    }
    Component {
        file: "colorPickerBackend.h"
        name: "ColorPickerBackend"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["ColorPicker/ColorPickerBackend 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "currentColor"
            type: "QColor"
            notify: "colorChanged"
            index: 0
            isFinal: true
            isRequired: true
        }
        Signal { name: "colorChanged" }
    }
    Component {
        file: "colorwheel.h"
        name: "ColorWheel"
        accessSemantics: "reference"
        prototype: "QQuickPaintedItem"
        exports: ["ColorPicker/ColorWheel 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "color"
            type: "QColor"
            notify: "colorChanged"
            index: 0
            isFinal: true
            isRequired: true
        }
        Signal { name: "colorChanged" }
        Signal { name: "editFinished" }
        Method {
            name: "setHue"
            Parameter { name: "value"; type: "double" }
        }
    }
    Component {
        file: "eyedropPreview.h"
        name: "EyedropPreview"
        accessSemantics: "reference"
        prototype: "QQuickPaintedItem"
        exports: ["ColorPicker/EyedropPreview 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "color"
            type: "QColor"
            read: "color"
            notify: "colorChanged"
            index: 0
            isReadonly: true
            isFinal: true
        }
        Property {
            name: "previewSize"
            type: "double"
            read: "previewSize"
            write: "setPreviewSize"
            notify: "previewSizeChanged"
            index: 1
        }
        Property {
            name: "previewMaxPixels"
            type: "double"
            write: "setPreviewMaxPixels"
            notify: "sizeChanged"
            index: 2
        }
        Property {
            name: "mouseX"
            type: "double"
            notify: "mousePositionChanged"
            index: 3
            isFinal: true
            isRequired: true
        }
        Property {
            name: "mouseY"
            type: "double"
            notify: "mousePositionChanged"
            index: 4
            isFinal: true
            isRequired: true
        }
        Property {
            name: "showPreview"
            type: "bool"
            notify: "showPreviewChanged"
            index: 5
            isFinal: true
        }
        Signal { name: "colorChanged" }
        Signal { name: "previewSizeChanged" }
        Signal { name: "sizeChanged" }
        Signal { name: "mousePositionChanged" }
        Signal { name: "showPreviewChanged" }
        Signal { name: "pickingStarted" }
        Signal { name: "pickingFinished" }
        Method { name: "startPicking" }
        Method { name: "cancelPicking" }
    }
    Component {
        file: "qvalidator.h"
        name: "QDoubleValidator"
        accessSemantics: "reference"
        prototype: "QValidator"
        Enum {
            name: "Notation"
            values: ["StandardNotation", "ScientificNotation"]
        }
        Property {
            name: "bottom"
            type: "double"
            read: "bottom"
            write: "setBottom"
            notify: "bottomChanged"
            index: 0
        }
        Property { name: "top"; type: "double"; read: "top"; write: "setTop"; notify: "topChanged"; index: 1 }
        Property {
            name: "decimals"
            type: "int"
            read: "decimals"
            write: "setDecimals"
            notify: "decimalsChanged"
            index: 2
        }
        Property {
            name: "notation"
            type: "Notation"
            read: "notation"
            write: "setNotation"
            notify: "notationChanged"
            index: 3
        }
        Signal {
            name: "bottomChanged"
            Parameter { name: "bottom"; type: "double" }
        }
        Signal {
            name: "topChanged"
            Parameter { name: "top"; type: "double" }
        }
        Signal {
            name: "decimalsChanged"
            Parameter { name: "decimals"; type: "int" }
        }
        Signal {
            name: "notationChanged"
            Parameter { name: "notation"; type: "QDoubleValidator::Notation" }
        }
    }
    Component {
        file: "textfielddoublevalidator.h"
        name: "TextFieldDoubleValidator"
        accessSemantics: "reference"
        prototype: "QDoubleValidator"
        exports: ["ColorPicker/TextFieldDoubleValidator 1.0"]
        exportMetaObjectRevisions: [256]
    }
}
